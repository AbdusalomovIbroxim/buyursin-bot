from dotenv import load_dotenv
import aiobot.handlers.commands as commands
import aiobot.handlers.user as user
import aiobot.handlers.ad as ad
import aiobot.handlers.admin as admin
import asyncio
import logging
from dispatcher.dispatcher import dis, bot
from aiobot.database import db
import threading
import os
from datetime import datetime

logging.basicConfig(level=logging.INFO)

load_dotenv()

def run_fake_server():
    import http.server
    import socketserver

    port = int(os.environ.get("PORT", 8080))
    Handler = http.server.SimpleHTTPRequestHandler
    with socketserver.TCPServer(("", port), Handler) as httpd:
        print(f"Serving fake HTTP on port {port}")
        httpd.serve_forever()

# –§—É–Ω–∫—Ü–∏—è –¥–ª—è –ø–æ–¥–¥–µ—Ä–∂–∞–Ω–∏—è –∞–∫—Ç–∏–≤–Ω–æ—Å—Ç–∏ –±–æ—Ç–∞ —Å –Ω–∞—Å—Ç—Ä–∞–∏–≤–∞–µ–º—ã–º–∏ –∏–Ω—Ç–µ—Ä–≤–∞–ª–∞–º–∏
async def keep_alive_advanced():
    """–û—Ç–ø—Ä–∞–≤–ª—è–µ—Ç —Å–æ–æ–±—â–µ–Ω–∏–µ —Å –Ω–∞—Å—Ç—Ä–∞–∏–≤–∞–µ–º—ã–º–∏ –∏–Ω—Ç–µ—Ä–≤–∞–ª–∞–º–∏ –¥–ª—è –ø–æ–¥–¥–µ—Ä–∂–∞–Ω–∏—è –∞–∫—Ç–∏–≤–Ω–æ—Å—Ç–∏"""
    admin_id = 1501361138  # –í–∞—à ID –≤ Telegram
    
    # –ù–∞—Å—Ç—Ä–æ–π–∫–∏ –∏–Ω—Ç–µ—Ä–≤–∞–ª–æ–≤ (–≤ —Å–µ–∫—É–Ω–¥–∞—Ö)
    intervals = {
        "short": 300,    # 5 –º–∏–Ω—É—Ç - –¥–ª—è –∞–∫—Ç–∏–≤–Ω–æ–≥–æ –≤—Ä–µ–º–µ–Ω–∏
        "medium": 900,   # 15 –º–∏–Ω—É—Ç - –¥–ª—è –æ–±—ã—á–Ω–æ–≥–æ –≤—Ä–µ–º–µ–Ω–∏  
        "long": 1800     # 30 –º–∏–Ω—É—Ç - –¥–ª—è –Ω–æ—á–Ω–æ–≥–æ –≤—Ä–µ–º–µ–Ω–∏
    }
    
    current_interval = intervals["medium"]  # –ü–æ —É–º–æ–ª—á–∞–Ω–∏—é 15 –º–∏–Ω—É—Ç
    message_count = 0
    
    while True:
        try:
            current_time = datetime.now().strftime("%Y-%m-%d %H:%M:%S")
            message_count += 1
            
            # –û–ø—Ä–µ–¥–µ–ª—è–µ–º –∏–Ω—Ç–µ—Ä–≤–∞–ª –≤ –∑–∞–≤–∏—Å–∏–º–æ—Å—Ç–∏ –æ—Ç –≤—Ä–µ–º–µ–Ω–∏
            hour = datetime.now().hour
            if 8 <= hour <= 22:  # –î–Ω–µ–≤–Ω–æ–µ –≤—Ä–µ–º—è
                current_interval = intervals["short"]
                time_status = "üåû –î–Ω–µ–≤–Ω–æ–µ –≤—Ä–µ–º—è"
            elif 22 <= hour or hour <= 6:  # –ù–æ—á–Ω–æ–µ –≤—Ä–µ–º—è
                current_interval = intervals["long"]
                time_status = "üåô –ù–æ—á–Ω–æ–µ –≤—Ä–µ–º—è"
            else:
                current_interval = intervals["medium"]
                time_status = "üåÖ –£—Ç—Ä–µ–Ω–Ω–µ–µ –≤—Ä–µ–º—è"
            
            message = f"ü§ñ –ë–æ—Ç –∞–∫—Ç–∏–≤–µ–Ω! #{message_count}\n"
            message += f"‚è∞ –í—Ä–µ–º—è: {current_time}\n"
            message += f"üìä –°—Ç–∞—Ç—É—Å: {time_status}\n"
            message += f"‚è±Ô∏è –°–ª–µ–¥—É—é—â–µ–µ —Å–æ–æ–±—â–µ–Ω–∏–µ —á–µ—Ä–µ–∑ {current_interval//60} –º–∏–Ω\n"
            message += "‚úÖ –í—Å–µ —Å–∏—Å—Ç–µ–º—ã —Ä–∞–±–æ—Ç–∞—é—Ç –Ω–æ—Ä–º–∞–ª—å–Ω–æ"
            
            await bot.send_message(admin_id, message)
            print(f"[KEEP_ALIVE] –°–æ–æ–±—â–µ–Ω–∏–µ #{message_count} –æ—Ç–ø—Ä–∞–≤–ª–µ–Ω–æ –≤ {current_time}")
            
        except Exception as e:
            print(f"[KEEP_ALIVE] –û—à–∏–±–∫–∞ –æ—Ç–ø—Ä–∞–≤–∫–∏: {e}")
        
        # –ñ–¥–µ–º –∑–∞–¥–∞–Ω–Ω—ã–π –∏–Ω—Ç–µ—Ä–≤–∞–ª
        await asyncio.sleep(current_interval)

dis.include_router(commands.router)
dis.include_router(ad.router)
dis.include_router(user.router)
dis.include_router(admin.router)

async def on_startup():
    await db.init()
    await db.create_all()

async def main():
    await on_startup()
    
    # –ó–∞–ø—É—Å–∫–∞–µ–º —Ñ–µ–π–∫–æ–≤—ã–π HTTP —Å–µ—Ä–≤–µ—Ä –≤ –æ—Ç–¥–µ–ª—å–Ω–æ–º –ø–æ—Ç–æ–∫–µ
    threading.Thread(target=run_fake_server, daemon=True).start()
    
    # –ó–∞–ø—É—Å–∫–∞–µ–º —Ñ—É–Ω–∫—Ü–∏—é –ø–æ–¥–¥–µ—Ä–∂–∞–Ω–∏—è –∞–∫—Ç–∏–≤–Ω–æ—Å—Ç–∏
    asyncio.create_task(keep_alive_advanced())
    
    print("[INFO] Bot started in polling mode with keep-alive")
    await dis.start_polling(bot)

if __name__ == '__main__':
    asyncio.run(main()) 